[00:00:00]
>> Mike North: Welcome everybody. This is fun for me because I have bounced around between a bunch of programming languages, and JavaScript has always got for the browser. But I really appreciate the aspects of other languages that have helped me kind of have fewer surprises at run time. Fewer surprises that my users tell me about.

[00:00:24]
And I am so excited that technologies, that bring that kind of thing to browser programming and to ecosystems like Node, they are becoming more popular and more mature and ever better. So on the off chance that you don't know what you're getting into yet, TypeScript is a typed super set of JavaScript.

[00:00:48]
What you should read into that is that most of your JavaScript will work, at least in some mode, when run through TypeScript's apparatus, which we will talk about in a moment. It is maintained by Microsoft. It compiles down to a variety of different versions of JavaScript. So many things can compile down to even ES3, ECMAScript version 3, which is the kind of JavaScript that even IE6 can read.

[00:01:19]
So you might think of it as over lapping a little bit conceptually with software like Babel except this adds a type system to that. So not only does TypeScript add types, but we will see that it adds kind of modern language features that JavaScript at least in the way that older browsers understand is lacking.

[00:01:43]
There are three parts to TypeScript. There's the language itself, the language service, which is what's gonna give us a great developer experience, right? As we're coding, it helps us understand what are the valid functions that are on this type of object. And then finally, there's the compiler. And that is what's responsible for parsing our code, building up a syntax tree, and eventually boiling that down into whatever we want our output to be, whatever level of JavaScript we are interested in.

[00:02:17]
And finally, I think the theme we will see here and this wasn't as obvious several years back, but it is certainly obvious now. A lot of things that previously were type script features now seem to be becoming regular JavaScript features, right? So this is exciting stuff, and I hope that throughout the day, I can make it really clear where the line is between modern JavaScript and TypeScript.

[00:02:46]
Because if you tread some of the best books out there, just because of the time they were written, it was not as obvious that things were moving in this direction. Where we could say that really it's just the types theTypeScript brings, the rest is kind of JavaScript it's borrowing these ideas for itself.

