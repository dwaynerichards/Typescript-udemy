[00:00:00]
>> Mike North: I just wanna recap the kinds of things we set out to do here. So hopefully we have a good idea about where the line between modern JavaScript and TypeScript is. All of the stuff like generator functions, async and await, they can be used with JavaScript. Types, generics, that kind of thing, interfaces, all of that has to do with TypeScript.

[00:00:24]
And more and more it seems like TypeScript just is focused on the types simply because a lot of the ideas that were successful in the TypeScript ecosystem are now inspiring similar language features being developed in the JavaScript ecosystem. But we spent some time today working with TypeScript and React.

[00:00:43]
And hopefully you get to feel that you have a lot more structure, you have a lot more compile time assurance that you're passing the right things to a component. That when you reach into state or props you're not gonna get mixed up between those two because it's almost like there's a white list of things you're allowed to see.

[00:01:01]
I even spotted around the room some typos being caught just because you had one letter too short on the name of a property, and like you got some immediate feedback that that was happening. We definitely used the power of types to make our code expressive. And that it's very clear what these different types of functions we built want, and we're able to basically throw up a red flag if we're ever misaligning the pieces of code that weren't made to go together.

[00:01:32]
When we started stripping away some of the type definitions, particularly like in that autocomplete function, we got rid of some of the explicit type definitions on values that functions were returning. We see the type inference can go a long way to figuring out what these things are gonna be without us having to explicitly say so, which makes for easier refactoring.

[00:01:55]
And then, hopefully, we've seen through the use of explicit entities and implicit entities and going through and sort of starting with loose type definitions and then tightening them up over time to sort of lock some constraints into place. We can see how adopting TypeScript and the JavaScript object and starting with a few areas of code and moving forward, that is a different prospect than say switching to something like CoffeeScript where it's a completely different programming language and it's sort of a big upheaval.

[00:02:30]
This is meant to be something where you do a few adjustments as you flip the switch on. And then almost like moving from CSS to SASS or something like that, you can take advantage of more features that are TypeScript specific as you choose to take advantage of those.

[00:02:47]
But you can just start by adopting it at sort of a basic level and move from there. So I hope you enjoyed the course. And I hope this encourages you to take advantage of typing in your JavaScript and TypeScript projects. Thanks a lot.
>> [APPLAUSE]

